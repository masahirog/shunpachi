= form_with(model: product, local: true, id: "product-form", data: { turbo: false }) do |f|

  - if product.errors.any?
    .alert.alert-danger.mb-4
      h5 = "#{pluralize(product.errors.count, "箇所")} のエラーがあり保存できませんでした。"
      ul.mb-0
        - product.errors.full_messages.each do |message|
          li = message
  #message-container

  .card.mb-4
    .card-header.bg-light
      h5.mb-0 基本情報
    .card-body        
      .row
        .col-md-6
          .mb-3
            = f.label :name, "名称", class: "form-label required"
            = f.text_field :name, class: "form-control required"
        .col-md-6
          .mb-3
            = f.label :container_id, "容器", class: "form-label"
            = f.collection_select :container_id, Container.all, :id, :name, { include_blank: "容器を選択" }, { class: "form-select" }
        .col-md-4
          .mb-3
            = f.label :category, "カテゴリー", class: "form-label required"
            = f.select :category, options_for_select_from_enum(Product, :category), {}, { class: "form-control category required" }
        .col-md-4
          .mb-3
            = f.label :jancode, "JANコード", class: "form-label"
            = f.text_field :jancode, class: "form-control"
        .col-md-4
          .mb-3
            = f.label :label_call_number, "ラベル_No.", class: "form-label"
            = f.number_field :label_call_number, class: "form-control"

      .row.price
        .col-md-4
          .mb-3
            = f.label :sell_price, "売価", class: "form-label required"
            = f.number_field :sell_price, class: "form-control product_sell_price required"
        .col-md-4
          .mb-3
            = f.label :cost_price, "原価", class: "form-label"
            = f.number_field :cost_price, class: "form-control product_cost_price", readonly: true
        .col-md-4
          .mb-3
            label.form-label 原価率
            .input-group
              input.form-control.product_cost_ratio type="text" readonly="readonly" value="0.0"
              span.input-group-text %
      .mb-3
        = f.label :introduction, "商品紹介", class: "form-label"
        = f.text_area :introduction, class: "form-control auto-resize", rows: 3
  .card.mb-4
    .card-header.bg-light
      h5.mb-0 商品画像
    .card-body
      .mb-3
        = f.label :image, "商品画像", class: "form-label"
        .input-group
          = f.file_field :image, class: "form-control", accept: "image/jpeg,image/png,image/gif"
          - if f.object.image.attached?
            button.btn.btn-outline-secondary.image-delete-btn type="button" 画像を削除
        small.form-text.text-muted JPG、PNG、GIF形式（5MB以下）でアップロードしてください
      
      - if f.object.image.attached?
        .mt-3.text-center
          = image_tag f.object.image.variant(resize_to_limit: [300, 300]), class: "img-thumbnail"

  .card.mb-4
    .card-header.bg-light
      h5.mb-0 食品表示情報
    .card-body
      .row
        .col-md-6
          .mb-3
            = f.label :food_label_name, "食品表示名称", class: "form-label required"
            = f.text_field :food_label_name, class: "form-control required"
            small.form-text.text-muted 空の場合は商品名が自動的に使用されます
        .col-md-6
          .mb-3
            = f.label :sales_unit_amount, "内容量", class: "form-label"
            = f.text_field :sales_unit_amount, class: "form-control"
      .d-flex.justify-content-end.mb-2
        button#generate-raw-materials-btn.btn.btn-outline-primary type="button"
          i.bi.bi-magic.me-1
          | 原材料表示自動生成
      
      .mb-3
        = f.label :raw_materials_food_contents,"原材料表示（食品）", class: "form-label"
        = f.text_area :raw_materials_food_contents, class: "form-control auto-resize", rows: 3
      .mb-3
        = f.label :raw_materials_additive_contents,"原材料表示（添加物）", class: "form-label"
        = f.text_area :raw_materials_additive_contents, class: "form-control auto-resize", rows: 3
      
 
      .mb-3#allergens-container class="#{product.persisted? && product.product_menus.any? ? '' : 'd-none'}"
        label.form-label アレルギー情報
        #product-allergens-list.d-flex.flex-wrap
          - if product.persisted? && product.product_menus.any?
            - allergens = []
            - product.product_menus.includes(menu: { menu_materials: { material: :material_allergies } }).each do |pm|
              - next unless pm.menu
              - pm.menu.menu_materials.each do |mm|
                - next unless mm.material
                - mm.material.material_allergies.each do |ma|
                  - allergens << ma.allergen if ma.allergen.present?
            - allergens.uniq.each do |allergen|
              span.badge.bg-warning.text-dark.me-2.mb-2 = MaterialAllergy.allergens_i18n[allergen]




      .mb-3
        = f.label :how_to_save, "保存方法", class: "form-label"
        .input-group
          .input-group-prepend
            button.btn.btn-outline-secondary.dropdown-toggle type="button" data-bs-toggle="dropdown" aria-expanded="false" プリセット
            .dropdown-menu
              a.dropdown-item.preservation-preset href="#" data-value="10℃以下で保存" 10℃以下で保存
              a.dropdown-item.preservation-preset href="#" data-value="直射日光及び高温多湿を避けてください" 直射日光及び高温多湿を避けてください
          = f.text_field :how_to_save, class: "form-control", id: "how_to_save_field"

  .card.mb-4
    .card-header.bg-light
      h5.mb-0 栄養成分
    .card-body
      table.table.table-bordered
        thead.table-light
          tr
            th カロリー
            th たんぱく質
            th 脂質
            th 炭水化物
            th 塩分
        tbody
          tr
            td = f.number_field :calorie, class: "product_calorie form-control", readonly: true
            td = f.number_field :protein, class: "product_protein form-control", readonly: true
            td = f.number_field :lipid, class: "product_lipid form-control", readonly: true
            td = f.number_field :carbohydrate, class: "product_carbohydrate form-control", readonly: true
            td = f.number_field :salt, class: "product_salt form-control", readonly: true

  .card.mb-4
    .card-header.bg-light.d-flex.justify-content-between.align-items-center.product_menus-add_button
      h5.mb-0 レシピ情報
      .d-flex
        = link_to_add_association "メニュー追加", f, :product_menus, 
          data: {association_insertion_node: '#product_menus-container',association_insertion_method: 'append'},
          class: 'btn btn-outline-primary btn-sm add_menu_fields'
    .card-body
      #product_menus-container
        = f.fields_for :product_menus do |product_menu_form|
          = render 'products/product_menu_fields', f: product_menu_form

  .card.mb-4
    .card-header.bg-light
      h5.mb-0 その他設定
    .card-body
      .form-check.mb-3
        = f.check_box :unused_flag, class: "form-check-input"
        = f.label :unused_flag, "使用停止", class: "form-check-label"

  .mt-4.text-center
    = f.submit "保存する", class: "btn btn-success px-4 py-2"